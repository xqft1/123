"use strict";var ze=Object.defineProperty;var yt=Object.getOwnPropertyDescriptor;var bt=Object.getOwnPropertyNames;var Tt=Object.prototype.hasOwnProperty;var Nt=(e,t)=>{for(var r in t)ze(e,r,{get:t[r],enumerable:!0})},Ot=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of bt(t))!Tt.call(e,o)&&o!==r&&ze(e,o,{get:()=>t[o],enumerable:!(n=yt(t,o))||n.enumerable});return e};var At=e=>Ot(ze({},"__esModule",{value:!0}),e);var vt={};Nt(vt,{AccountIdentifier:()=>k,AllowanceChangedError:()=>L,ApproveError:()=>N,BadFeeError:()=>S,ConsentMessageError:()=>C,ConsentMessageUnavailableError:()=>oe,CreatedInFutureError:()=>ee,DuplicateError:()=>D,ExpiredError:()=>re,GenericError:()=>J,IcrcError:()=>q,IndexCanister:()=>ae,InsufficientFundsError:()=>P,InsufficientPaymentError:()=>ne,InvalidAccountIDError:()=>U,InvalidSenderError:()=>Le,LedgerCanister:()=>ie,SubAccount:()=>Q,TemporarilyUnavailableError:()=>I,TooOldError:()=>te,TransferError:()=>A,TxCreatedInFutureError:()=>j,TxDuplicateError:()=>W,TxTooOldError:()=>z,UnsupportedCanisterCallError:()=>ce,checkAccountId:()=>ht,isIcpAccountIdentifier:()=>Bt,mapIcrc1TransferError:()=>tt,mapIcrc21ConsentMessageError:()=>nt,mapIcrc2ApproveError:()=>rt,mapTransferError:()=>et,toIcrc1TransferRawRequest:()=>Ze,toIcrc21ConsentMessageRawRequest:()=>De,toIcrc2ApproveRawRequest:()=>Ie,toTransferRawRequest:()=>Ye});module.exports=At(vt);var T=require("@dfinity/utils");function wt(e){return e instanceof Uint8Array||e!=null&&typeof e=="object"&&e.constructor.name==="Uint8Array"}function je(e,...t){if(!wt(e))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(e.length))throw new Error(`Uint8Array expected of length ${t}, not of length=${e.length}`)}function We(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function st(e,t){je(e);let r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}var K=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),b=(e,t)=>e<<32-t|e>>>t;var Ut=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Ft(e){if(typeof e!="string")throw new Error(`utf8ToBytes expected string, got ${typeof e}`);return new Uint8Array(new TextEncoder().encode(e))}function Je(e){return typeof e=="string"&&(e=Ft(e)),je(e),e}var X=class{clone(){return this._cloneInto()}},Pt={}.toString;function at(e){let t=n=>e().update(Je(n)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}function Vt(e,t,r,n){if(typeof e.setBigUint64=="function")return e.setBigUint64(t,r,n);let o=BigInt(32),c=BigInt(4294967295),i=Number(r>>o&c),u=Number(r&c),d=n?4:0,p=n?0:4;e.setUint32(t+d,i,n),e.setUint32(t+p,u,n)}var it=(e,t,r)=>e&t^~e&r,ut=(e,t,r)=>e&t^e&r^t&r,Y=class extends X{constructor(t,r,n,o){super(),this.blockLen=t,this.outputLen=r,this.padOffset=n,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=K(this.buffer)}update(t){We(this);let{view:r,buffer:n,blockLen:o}=this;t=Je(t);let c=t.length;for(let i=0;i<c;){let u=Math.min(o-this.pos,c-i);if(u===o){let d=K(t);for(;o<=c-i;i+=o)this.process(d,i);continue}n.set(t.subarray(i,i+u),this.pos),this.pos+=u,i+=u,this.pos===o&&(this.process(r,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){We(this),st(t,this),this.finished=!0;let{buffer:r,view:n,blockLen:o,isLE:c}=this,{pos:i}=this;r[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>o-i&&(this.process(n,0),i=0);for(let s=i;s<o;s++)r[s]=0;Vt(n,o-8,BigInt(this.length*8),c),this.process(n,0);let u=K(t),d=this.outputLen;if(d%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let p=d/4,_=this.get();if(p>_.length)throw new Error("_sha2: outputLen bigger than state");for(let s=0;s<p;s++)u.setUint32(4*s,_[s],c)}digest(){let{buffer:t,outputLen:r}=this;this.digestInto(t);let n=t.slice(0,r);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:r,buffer:n,length:o,finished:c,destroyed:i,pos:u}=this;return t.length=o,t.pos=u,t.finished=c,t.destroyed=i,o%r&&t.buffer.set(n),t}};var kt=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),F=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),V=new Uint32Array(64),Xe=class extends Y{constructor(){super(64,32,8,!1),this.A=F[0]|0,this.B=F[1]|0,this.C=F[2]|0,this.D=F[3]|0,this.E=F[4]|0,this.F=F[5]|0,this.G=F[6]|0,this.H=F[7]|0}get(){let{A:t,B:r,C:n,D:o,E:c,F:i,G:u,H:d}=this;return[t,r,n,o,c,i,u,d]}set(t,r,n,o,c,i,u,d){this.A=t|0,this.B=r|0,this.C=n|0,this.D=o|0,this.E=c|0,this.F=i|0,this.G=u|0,this.H=d|0}process(t,r){for(let s=0;s<16;s++,r+=4)V[s]=t.getUint32(r,!1);for(let s=16;s<64;s++){let x=V[s-15],m=V[s-2],O=b(x,7)^b(x,18)^x>>>3,h=b(m,17)^b(m,19)^m>>>10;V[s]=h+V[s-7]+O+V[s-16]|0}let{A:n,B:o,C:c,D:i,E:u,F:d,G:p,H:_}=this;for(let s=0;s<64;s++){let x=b(u,6)^b(u,11)^b(u,25),m=_+x+it(u,d,p)+kt[s]+V[s]|0,h=(b(n,2)^b(n,13)^b(n,22))+ut(n,o,c)|0;_=p,p=d,d=u,u=i+m|0,i=c,c=o,o=n,n=m+h|0}n=n+this.A|0,o=o+this.B|0,c=c+this.C|0,i=i+this.D|0,u=u+this.E|0,d=d+this.F|0,p=p+this.G|0,_=_+this.H|0,this.set(n,o,c,i,u,d,p,_)}roundClean(){V.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}},Ke=class extends Xe{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}};var dt=at(()=>new Ke);var k=class e{constructor(t){this.bytes=t}static fromHex(t){let r=Uint8Array.from(Buffer.from(t,"hex"));if(r.length!==32)throw new Error(`Invalid AccountIdentifier: expected 32 bytes, got ${r.length}.`);let n=(0,T.uint8ArrayToHexString)(r.slice(0,4)),o=r.slice(4),c=(0,T.uint8ArrayToHexString)((0,T.bigEndianCrc32)(o));if(n!==c)throw Error(`Checksum mismatch. Expected ${c}, but got ${n}.`);return new e(r)}static fromPrincipal({principal:t,subAccount:r=Q.fromID(0)}){let n=(0,T.asciiStringToByteArray)(`
account-id`),o=dt.create();o.update((0,T.arrayOfNumberToUint8Array)([...n,...t.toUint8Array(),...r.toUint8Array()]));let c=o.digest(),i=(0,T.bigEndianCrc32)(c),u=new Uint8Array([...i,...c]);return new e(u)}toHex(){return(0,T.uint8ArrayToHexString)(this.bytes)}toUint8Array(){return this.bytes}toNumbers(){return Array.from(this.bytes)}toAccountIdentifierHash(){return{hash:this.toUint8Array()}}},Q=class e{constructor(t){this.bytes=t}static fromBytes(t){if(t.length!==32)throw new Error("Subaccount length must be 32-bytes");return new e(t)}static fromPrincipal(t){let r=new Uint8Array(32).fill(0),n=t.toUint8Array();r[0]=n.length;for(let o=0;o<n.length;o++)r[1+o]=n[o];return new e(r)}static fromID(t){if(t<0)throw new Error("Number cannot be negative");if(t>Number.MAX_SAFE_INTEGER)throw new Error("Number is too large to fit in 32 bytes.");let r=new DataView(new ArrayBuffer(32));if(typeof r.setBigUint64=="function")r.setBigUint64(24,BigInt(t));else{let o=BigInt(1)<<BigInt(32);r.setUint32(24,Number(BigInt(t)>>BigInt(32))),r.setUint32(28,Number(BigInt(t)%o))}let n=new Uint8Array(r.buffer);return new e(n)}toUint8Array(){return this.bytes}};var l=require("@dfinity/utils");var Jt=BigInt(1095062083),Xt=BigInt(1347768404),Z=BigInt(1e4),Kt=BigInt(1e8);var pt=e=>({e8s:e}),Ye=({to:e,amount:t,memo:r,fee:n,fromSubAccount:o,createdAt:c})=>({to:e.toUint8Array(),fee:pt(n??Z),amount:pt(t),memo:r??BigInt(0),created_at_time:c!==void 0?[{timestamp_nanos:c}]:[],from_subaccount:o===void 0?[]:[(0,l.arrayOfNumberToUint8Array)(o)]}),Ze=({fromSubAccount:e,to:t,amount:r,fee:n,icrc1Memo:o,createdAt:c})=>({to:t,fee:(0,l.toNullable)(n??Z),amount:r,memo:(0,l.toNullable)(o),created_at_time:(0,l.toNullable)(c),from_subaccount:(0,l.toNullable)(e)}),Ie=({fee:e,createdAt:t,icrc1Memo:r,fromSubAccount:n,expected_allowance:o,expires_at:c,amount:i,...u})=>({...u,fee:(0,l.toNullable)(e??Z),memo:(0,l.toNullable)(r),from_subaccount:(0,l.toNullable)(n),created_at_time:(0,l.toNullable)(t),amount:i,expected_allowance:(0,l.toNullable)(o),expires_at:(0,l.toNullable)(c)}),De=({userPreferences:{metadata:{utcOffsetMinutes:e,language:t},deriveSpec:r},...n})=>({...n,user_preferences:{metadata:{language:t,utc_offset_minutes:(0,l.toNullable)(e)},device_spec:(0,l.isNullish)(r)?(0,l.toNullable)():(0,l.toNullable)("GenericDisplay"in r?{GenericDisplay:null}:{LineDisplay:{characters_per_line:r.LineDisplay.charactersPerLine,lines_per_page:r.LineDisplay.linesPerPage}})}});var q=class extends Error{},A=class extends q{},N=class extends q{},C=class extends q{},Le=class extends A{},U=class extends Error{},P=class extends A{constructor(r){super();this.balance=r}},z=class extends A{constructor(r){super();this.allowed_window_secs=r}},j=class extends A{},W=class extends A{constructor(r){super();this.duplicateOf=r}},S=class extends q{constructor(r){super();this.expectedFee=r}},J=class extends N{constructor(r,n){super();this.message=r;this.error_code=n}},I=class extends N{},D=class extends N{constructor(r){super();this.duplicateOf=r}},L=class extends N{constructor(r){super();this.currentAllowance=r}},ee=class extends N{},te=class extends N{},re=class extends N{constructor(r){super();this.ledgerTime=r}},ne=class extends C{},ce=class extends C{},oe=class extends C{},et=e=>"TxDuplicate"in e?new W(e.TxDuplicate.duplicate_of):"InsufficientFunds"in e?new P(e.InsufficientFunds.balance.e8s):"TxCreatedInFuture"in e?new j:"TxTooOld"in e?new z(Number(e.TxTooOld.allowed_window_nanos)):"BadFee"in e?new S(e.BadFee.expected_fee.e8s):new A(`Unknown error type ${JSON.stringify(e)}`),tt=e=>"Duplicate"in e?new W(e.Duplicate.duplicate_of):"InsufficientFunds"in e?new P(e.InsufficientFunds.balance):"CreatedInFuture"in e?new j:"TooOld"in e?new z:"BadFee"in e?new S(e.BadFee.expected_fee):new A(`Unknown error type ${JSON.stringify(e)}`),rt=e=>"GenericError"in e?new J(e.GenericError.message,e.GenericError.error_code):"TemporarilyUnavailable"in e?new I:"Duplicate"in e?new D(e.Duplicate.duplicate_of):"BadFee"in e?new S(e.BadFee.expected_fee):"AllowanceChanged"in e?new L(e.AllowanceChanged.current_allowance):"CreatedInFuture"in e?new ee:"TooOld"in e?new te:"Expired"in e?new re(e.Expired.ledger_time):"InsufficientFunds"in e?new P(e.InsufficientFunds.balance):new N(`Unknown error type ${JSON.stringify(e)}`),nt=e=>"GenericError"in e?new J(e.GenericError.description,e.GenericError.error_code):"InsufficientPayment"in e?new ne(e.InsufficientPayment.description):"UnsupportedCanisterCall"in e?new ce(e.UnsupportedCanisterCall.description):"ConsentMessageUnavailable"in e?new oe(e.ConsentMessageUnavailable.description):new C(`Unknown error type ${JSON.stringify(e)}`);var G=require("@dfinity/utils");var lt=({IDL:e})=>{let t=e.Record({ledger_id:e.Principal}),r=e.Record({max_results:e.Nat64,start:e.Opt(e.Nat64),account_identifier:e.Text}),n=e.Record({e8s:e.Nat64}),o=e.Record({timestamp_nanos:e.Nat64}),c=e.Variant({Approve:e.Record({fee:n,from:e.Text,allowance:n,expected_allowance:e.Opt(n),expires_at:e.Opt(o),spender:e.Text}),Burn:e.Record({from:e.Text,amount:n,spender:e.Opt(e.Text)}),Mint:e.Record({to:e.Text,amount:n}),Transfer:e.Record({to:e.Text,fee:n,from:e.Text,amount:n,spender:e.Opt(e.Text)})}),i=e.Record({memo:e.Nat64,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:c,timestamp:e.Opt(o),created_at_time:e.Opt(o)}),u=e.Record({id:e.Nat64,transaction:i}),d=e.Record({balance:e.Nat64,transactions:e.Vec(u),oldest_tx_id:e.Opt(e.Nat64)}),p=e.Record({message:e.Text}),_=e.Variant({Ok:d,Err:p}),s=e.Record({owner:e.Principal,subaccount:e.Opt(e.Vec(e.Nat8))}),x=e.Record({max_results:e.Nat,start:e.Opt(e.Nat),account:s}),m=e.Record({start:e.Nat,length:e.Nat}),O=e.Record({blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64}),h=e.Record({url:e.Text,method:e.Text,body:e.Vec(e.Nat8),headers:e.Vec(e.Tuple(e.Text,e.Text))}),a=e.Record({body:e.Vec(e.Nat8),headers:e.Vec(e.Tuple(e.Text,e.Text)),status_code:e.Nat16}),B=e.Record({num_blocks_synced:e.Nat64});return e.Service({get_account_identifier_balance:e.Func([e.Text],[e.Nat64],[]),get_account_identifier_transactions:e.Func([r],[_],[]),get_account_transactions:e.Func([x],[_],[]),get_blocks:e.Func([m],[O],[]),http_request:e.Func([h],[a],[]),icrc1_balance_of:e.Func([s],[e.Nat64],[]),ledger_id:e.Func([],[e.Principal],[]),status:e.Func([],[B],[])})};var ft=({IDL:e})=>{let t=e.Record({ledger_id:e.Principal}),r=e.Record({max_results:e.Nat64,start:e.Opt(e.Nat64),account_identifier:e.Text}),n=e.Record({e8s:e.Nat64}),o=e.Record({timestamp_nanos:e.Nat64}),c=e.Variant({Approve:e.Record({fee:n,from:e.Text,allowance:n,expected_allowance:e.Opt(n),expires_at:e.Opt(o),spender:e.Text}),Burn:e.Record({from:e.Text,amount:n,spender:e.Opt(e.Text)}),Mint:e.Record({to:e.Text,amount:n}),Transfer:e.Record({to:e.Text,fee:n,from:e.Text,amount:n,spender:e.Opt(e.Text)})}),i=e.Record({memo:e.Nat64,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:c,timestamp:e.Opt(o),created_at_time:e.Opt(o)}),u=e.Record({id:e.Nat64,transaction:i}),d=e.Record({balance:e.Nat64,transactions:e.Vec(u),oldest_tx_id:e.Opt(e.Nat64)}),p=e.Record({message:e.Text}),_=e.Variant({Ok:d,Err:p}),s=e.Record({owner:e.Principal,subaccount:e.Opt(e.Vec(e.Nat8))}),x=e.Record({max_results:e.Nat,start:e.Opt(e.Nat),account:s}),m=e.Record({start:e.Nat,length:e.Nat}),O=e.Record({blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64}),h=e.Record({url:e.Text,method:e.Text,body:e.Vec(e.Nat8),headers:e.Vec(e.Tuple(e.Text,e.Text))}),a=e.Record({body:e.Vec(e.Nat8),headers:e.Vec(e.Tuple(e.Text,e.Text)),status_code:e.Nat16}),B=e.Record({num_blocks_synced:e.Nat64});return e.Service({get_account_identifier_balance:e.Func([e.Text],[e.Nat64],["query"]),get_account_identifier_transactions:e.Func([r],[_],["query"]),get_account_transactions:e.Func([x],[_],["query"]),get_blocks:e.Func([m],[O],["query"]),http_request:e.Func([h],[a],["query"]),icrc1_balance_of:e.Func([s],[e.Nat64],["query"]),ledger_id:e.Func([],[e.Principal],["query"]),status:e.Func([],[B],["query"])})};var ct=require("@dfinity/principal"),_t=ct.Principal.fromText("ryjl3-tyaaa-aaaaa-aaaba-cai"),mt=ct.Principal.fromText("qhbym-qaaaa-aaaaa-aaafq-cai");var se=class extends Error{};var xt=e=>e instanceof k?e:k.fromHex(e),ot=e=>e instanceof k?e.toHex():e;var ae=class e extends G.Canister{static create({canisterId:t,...r}){let{service:n,certifiedService:o,canisterId:c}=(0,G.createServices)({options:{...r,canisterId:t??mt},idlFactory:ft,certifiedIdlFactory:lt});return new e(c,n,o)}accountBalance=({certified:t,accountIdentifier:r})=>this.caller({certified:t}).get_account_identifier_balance(ot(r));getTransactions=async({certified:t,accountIdentifier:r,start:n,maxResults:o})=>{let c=await this.caller({certified:t}).get_account_identifier_transactions({account_identifier:ot(r),start:(0,G.toNullable)(n),max_results:o});if("Err"in c)throw new se(c.Err.message);return c.Ok}};var ue=require("@dfinity/utils");var gt=({IDL:e})=>{let t=e.Vec(e.Nat8),r=e.Record({owner:e.Principal,subaccount:e.Opt(t)}),n=e.Record({icrc2:e.Bool}),o=e.Record({icrc1_minting_account:e.Opt(r),feature_flags:e.Opt(n)}),c=e.Record({e8s:e.Nat64}),i=e.Text,u=e.Record({secs:e.Nat64,nanos:e.Nat32}),d=e.Record({num_blocks_to_archive:e.Nat64,max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Nat64,more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),p=e.Record({send_whitelist:e.Vec(e.Principal),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(c),minting_account:i,transaction_window:e.Opt(u),max_message_size_bytes:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(r),archive_options:e.Opt(d),initial_values:e.Vec(e.Tuple(i,c)),token_name:e.Opt(e.Text),feature_flags:e.Opt(n)}),_=e.Variant({Upgrade:e.Opt(o),Init:p}),s=e.Vec(e.Nat8),x=e.Record({account:s}),m=e.Record({account:i}),O=e.Record({canister_id:e.Principal}),h=e.Record({archives:e.Vec(O)}),a=e.Nat,B=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),g=e.Nat64,pe=e.Record({to:r,fee:e.Opt(a),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(g),amount:a}),R=e.Nat,le=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:a}),Duplicate:e.Record({duplicate_of:R}),BadFee:e.Record({expected_fee:a}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,InsufficientFunds:e.Record({balance:a})}),fe=e.Variant({Ok:R,Err:le}),M=e.Record({utc_offset_minutes:e.Opt(e.Int16),language:e.Text}),_e=e.Record({metadata:M,device_spec:e.Opt(e.Variant({GenericDisplay:e.Null,LineDisplay:e.Record({characters_per_line:e.Nat16,lines_per_page:e.Nat16})}))}),me=e.Record({arg:e.Vec(e.Nat8),method:e.Text,user_preferences:_e}),xe=e.Variant({LineDisplayMessage:e.Record({pages:e.Vec(e.Record({lines:e.Vec(e.Text)}))}),GenericDisplayMessage:e.Text}),ge=e.Record({metadata:M,consent_message:xe}),v=e.Record({description:e.Text}),Re=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),InsufficientPayment:v,UnsupportedCanisterCall:v,ConsentMessageUnavailable:v}),he=e.Variant({Ok:ge,Err:Re}),ye=e.Record({account:r,spender:r}),be=e.Record({allowance:a,expires_at:e.Opt(g)}),Te=e.Record({fee:e.Opt(a),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(g),amount:a,expected_allowance:e.Opt(a),expires_at:e.Opt(g),spender:r}),Ne=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:R}),BadFee:e.Record({expected_fee:a}),AllowanceChanged:e.Record({current_allowance:a}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,Expired:e.Record({ledger_time:e.Nat64}),InsufficientFunds:e.Record({balance:a})}),Oe=e.Variant({Ok:R,Err:Ne}),Ae=e.Record({to:r,fee:e.Opt(a),spender_subaccount:e.Opt(t),from:r,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(g),amount:a}),we=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,InsufficientAllowance:e.Record({allowance:a}),BadBurn:e.Record({min_burn_amount:a}),Duplicate:e.Record({duplicate_of:R}),BadFee:e.Record({expected_fee:a}),CreatedInFuture:e.Record({ledger_time:g}),TooOld:e.Null,InsufficientFunds:e.Record({balance:a})}),Fe=e.Variant({Ok:R,Err:we}),f=e.Nat64,w=e.Record({start:f,length:e.Nat64}),E=e.Nat64,y=e.Record({timestamp_nanos:e.Nat64}),Ve=e.Variant({Approve:e.Record({fee:c,from:s,allowance_e8s:e.Int,allowance:c,expected_allowance:e.Opt(c),expires_at:e.Opt(y),spender:s}),Burn:e.Record({from:s,amount:c,spender:e.Opt(s)}),Mint:e.Record({to:s,amount:c}),Transfer:e.Record({to:s,fee:c,from:s,amount:c,spender:e.Opt(e.Vec(e.Nat8))})}),ke=e.Record({memo:E,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:e.Opt(Ve),created_at_time:y}),H=e.Record({transaction:ke,timestamp:y,parent_hash:e.Opt(e.Vec(e.Nat8))}),Be=e.Record({blocks:e.Vec(H)}),$=e.Variant({BadFirstBlockIndex:e.Record({requested_index:f,first_valid_index:f}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),ve=e.Variant({Ok:Be,Err:$}),Ee=e.Func([w],[ve],[]),qe=e.Record({callback:Ee,start:f,length:e.Nat64}),Ce=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(H),chain_length:e.Nat64,first_block_index:f,archived_blocks:e.Vec(qe)}),Ue=e.Record({callback:e.Func([w],[e.Variant({Ok:e.Vec(e.Vec(e.Nat8)),Err:$})],[]),start:e.Nat64,length:e.Nat64}),Pe=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64,first_block_index:e.Nat64,archived_blocks:e.Vec(Ue)}),Se=e.Record({to:i,fee:c,memo:E,from_subaccount:e.Opt(t),created_at_time:e.Opt(y),amount:c}),Ge=e.Record({to:s,fee:c,memo:E,from_subaccount:e.Opt(t),created_at_time:e.Opt(y),amount:c}),Me=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:c}),TxDuplicate:e.Record({duplicate_of:f}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:c})}),He=e.Variant({Ok:f,Err:Me}),$e=e.Record({}),Qe=e.Record({transfer_fee:c});return e.Service({account_balance:e.Func([x],[c],[]),account_balance_dfx:e.Func([m],[c],[]),account_identifier:e.Func([r],[s],[]),archives:e.Func([],[h],[]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],[]),icrc10_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],[]),icrc1_balance_of:e.Func([r],[a],[]),icrc1_decimals:e.Func([],[e.Nat8],[]),icrc1_fee:e.Func([],[a],[]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,B))],[]),icrc1_minting_account:e.Func([],[e.Opt(r)],[]),icrc1_name:e.Func([],[e.Text],[]),icrc1_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],[]),icrc1_symbol:e.Func([],[e.Text],[]),icrc1_total_supply:e.Func([],[a],[]),icrc1_transfer:e.Func([pe],[fe],[]),icrc21_canister_call_consent_message:e.Func([me],[he],[]),icrc2_allowance:e.Func([ye],[be],[]),icrc2_approve:e.Func([Te],[Oe],[]),icrc2_transfer_from:e.Func([Ae],[Fe],[]),is_ledger_ready:e.Func([],[e.Bool],[]),name:e.Func([],[e.Record({name:e.Text})],[]),query_blocks:e.Func([w],[Ce],[]),query_encoded_blocks:e.Func([w],[Pe],[]),send_dfx:e.Func([Se],[f],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],[]),transfer:e.Func([Ge],[He],[]),transfer_fee:e.Func([$e],[Qe],[])})};var Rt=({IDL:e})=>{let t=e.Vec(e.Nat8),r=e.Record({owner:e.Principal,subaccount:e.Opt(t)}),n=e.Record({icrc2:e.Bool}),o=e.Record({icrc1_minting_account:e.Opt(r),feature_flags:e.Opt(n)}),c=e.Record({e8s:e.Nat64}),i=e.Text,u=e.Record({secs:e.Nat64,nanos:e.Nat32}),d=e.Record({num_blocks_to_archive:e.Nat64,max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Nat64,more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),p=e.Record({send_whitelist:e.Vec(e.Principal),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(c),minting_account:i,transaction_window:e.Opt(u),max_message_size_bytes:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(r),archive_options:e.Opt(d),initial_values:e.Vec(e.Tuple(i,c)),token_name:e.Opt(e.Text),feature_flags:e.Opt(n)}),_=e.Variant({Upgrade:e.Opt(o),Init:p}),s=e.Vec(e.Nat8),x=e.Record({account:s}),m=e.Record({account:i}),O=e.Record({canister_id:e.Principal}),h=e.Record({archives:e.Vec(O)}),a=e.Nat,B=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),g=e.Nat64,pe=e.Record({to:r,fee:e.Opt(a),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(g),amount:a}),R=e.Nat,le=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:a}),Duplicate:e.Record({duplicate_of:R}),BadFee:e.Record({expected_fee:a}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,InsufficientFunds:e.Record({balance:a})}),fe=e.Variant({Ok:R,Err:le}),M=e.Record({utc_offset_minutes:e.Opt(e.Int16),language:e.Text}),_e=e.Record({metadata:M,device_spec:e.Opt(e.Variant({GenericDisplay:e.Null,LineDisplay:e.Record({characters_per_line:e.Nat16,lines_per_page:e.Nat16})}))}),me=e.Record({arg:e.Vec(e.Nat8),method:e.Text,user_preferences:_e}),xe=e.Variant({LineDisplayMessage:e.Record({pages:e.Vec(e.Record({lines:e.Vec(e.Text)}))}),GenericDisplayMessage:e.Text}),ge=e.Record({metadata:M,consent_message:xe}),v=e.Record({description:e.Text}),Re=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),InsufficientPayment:v,UnsupportedCanisterCall:v,ConsentMessageUnavailable:v}),he=e.Variant({Ok:ge,Err:Re}),ye=e.Record({account:r,spender:r}),be=e.Record({allowance:a,expires_at:e.Opt(g)}),Te=e.Record({fee:e.Opt(a),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(g),amount:a,expected_allowance:e.Opt(a),expires_at:e.Opt(g),spender:r}),Ne=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:R}),BadFee:e.Record({expected_fee:a}),AllowanceChanged:e.Record({current_allowance:a}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,Expired:e.Record({ledger_time:e.Nat64}),InsufficientFunds:e.Record({balance:a})}),Oe=e.Variant({Ok:R,Err:Ne}),Ae=e.Record({to:r,fee:e.Opt(a),spender_subaccount:e.Opt(t),from:r,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(g),amount:a}),we=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,InsufficientAllowance:e.Record({allowance:a}),BadBurn:e.Record({min_burn_amount:a}),Duplicate:e.Record({duplicate_of:R}),BadFee:e.Record({expected_fee:a}),CreatedInFuture:e.Record({ledger_time:g}),TooOld:e.Null,InsufficientFunds:e.Record({balance:a})}),Fe=e.Variant({Ok:R,Err:we}),f=e.Nat64,w=e.Record({start:f,length:e.Nat64}),E=e.Nat64,y=e.Record({timestamp_nanos:e.Nat64}),Ve=e.Variant({Approve:e.Record({fee:c,from:s,allowance_e8s:e.Int,allowance:c,expected_allowance:e.Opt(c),expires_at:e.Opt(y),spender:s}),Burn:e.Record({from:s,amount:c,spender:e.Opt(s)}),Mint:e.Record({to:s,amount:c}),Transfer:e.Record({to:s,fee:c,from:s,amount:c,spender:e.Opt(e.Vec(e.Nat8))})}),ke=e.Record({memo:E,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:e.Opt(Ve),created_at_time:y}),H=e.Record({transaction:ke,timestamp:y,parent_hash:e.Opt(e.Vec(e.Nat8))}),Be=e.Record({blocks:e.Vec(H)}),$=e.Variant({BadFirstBlockIndex:e.Record({requested_index:f,first_valid_index:f}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),ve=e.Variant({Ok:Be,Err:$}),Ee=e.Func([w],[ve],["query"]),qe=e.Record({callback:Ee,start:f,length:e.Nat64}),Ce=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(H),chain_length:e.Nat64,first_block_index:f,archived_blocks:e.Vec(qe)}),Ue=e.Record({callback:e.Func([w],[e.Variant({Ok:e.Vec(e.Vec(e.Nat8)),Err:$})],["query"]),start:e.Nat64,length:e.Nat64}),Pe=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64,first_block_index:e.Nat64,archived_blocks:e.Vec(Ue)}),Se=e.Record({to:i,fee:c,memo:E,from_subaccount:e.Opt(t),created_at_time:e.Opt(y),amount:c}),Ge=e.Record({to:s,fee:c,memo:E,from_subaccount:e.Opt(t),created_at_time:e.Opt(y),amount:c}),Me=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:c}),TxDuplicate:e.Record({duplicate_of:f}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:c})}),He=e.Variant({Ok:f,Err:Me}),$e=e.Record({}),Qe=e.Record({transfer_fee:c});return e.Service({account_balance:e.Func([x],[c],["query"]),account_balance_dfx:e.Func([m],[c],["query"]),account_identifier:e.Func([r],[s],["query"]),archives:e.Func([],[h],["query"]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],["query"]),icrc10_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],["query"]),icrc1_balance_of:e.Func([r],[a],["query"]),icrc1_decimals:e.Func([],[e.Nat8],["query"]),icrc1_fee:e.Func([],[a],["query"]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,B))],["query"]),icrc1_minting_account:e.Func([],[e.Opt(r)],["query"]),icrc1_name:e.Func([],[e.Text],["query"]),icrc1_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],["query"]),icrc1_symbol:e.Func([],[e.Text],["query"]),icrc1_total_supply:e.Func([],[a],["query"]),icrc1_transfer:e.Func([pe],[fe],[]),icrc21_canister_call_consent_message:e.Func([me],[he],[]),icrc2_allowance:e.Func([ye],[be],["query"]),icrc2_approve:e.Func([Te],[Oe],[]),icrc2_transfer_from:e.Func([Ae],[Fe],[]),is_ledger_ready:e.Func([],[e.Bool],["query"]),name:e.Func([],[e.Record({name:e.Text})],["query"]),query_blocks:e.Func([w],[Ce],["query"]),query_encoded_blocks:e.Func([w],[Pe],["query"]),send_dfx:e.Func([Se],[f],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],["query"]),transfer:e.Func([Ge],[He],[]),transfer_fee:e.Func([$e],[Qe],["query"])})};var ie=class e extends ue.Canister{static create(t={}){let r=t.canisterId??_t,{service:n,certifiedService:o}=(0,ue.createServices)({options:{...t,canisterId:r},idlFactory:Rt,certifiedIdlFactory:gt});return new e(r,n,o)}accountBalance=async({accountIdentifier:t,certified:r=!0})=>{let n=xt(t);return(await(r?this.certifiedService:this.service).account_balance({account:n.toUint8Array()})).e8s};metadata=t=>{let{icrc1_metadata:r}=this.caller(t);return r()};transactionFee=async(t={certified:!1})=>{let{transfer_fee:r}=this.caller(t),{transfer_fee:{e8s:n}}=await r({});return n};transfer=async t=>{let r=Ye(t),n=await this.certifiedService.transfer(r);if("Err"in n)throw et(n.Err);return n.Ok};icrc1Transfer=async t=>{let r=Ze(t),n=await this.certifiedService.icrc1_transfer(r);if("Err"in n)throw tt(n.Err);return n.Ok};icrc2Approve=async t=>{let{icrc2_approve:r}=this.caller({certified:!0}),n=await r(Ie(t));if("Err"in n)throw rt(n.Err);return n.Ok};icrc21ConsentMessage=async t=>{let{icrc21_canister_call_consent_message:r}=this.caller({certified:!0}),n=await r(De(t));if("Err"in n)throw nt(n.Err);return n.Ok}};var de=require("@dfinity/utils");var ht=e=>{if(e.length!=64)throw new U(`Invalid account identifier ${e}. The account identifier must be 64 chars in length.`);let t=Buffer.from(e,"hex"),r=t.slice(0,4),n=Buffer.from((0,de.bigEndianCrc32)(t.slice(4)));if(!n.equals(r))throw new U(`Account identifier ${e} has an invalid checksum. Are you sure the account identifier is correct?

Expected checksum: ${n.toString("hex")}
Found checksum: ${r.toString("hex")}`)},Bt=e=>{if((0,de.isNullish)(e))return!1;try{return ht(e),!0}catch{}return!1};0&&(module.exports={AccountIdentifier,AllowanceChangedError,ApproveError,BadFeeError,ConsentMessageError,ConsentMessageUnavailableError,CreatedInFutureError,DuplicateError,ExpiredError,GenericError,IcrcError,IndexCanister,InsufficientFundsError,InsufficientPaymentError,InvalidAccountIDError,InvalidSenderError,LedgerCanister,SubAccount,TemporarilyUnavailableError,TooOldError,TransferError,TxCreatedInFutureError,TxDuplicateError,TxTooOldError,UnsupportedCanisterCallError,checkAccountId,isIcpAccountIdentifier,mapIcrc1TransferError,mapIcrc21ConsentMessageError,mapIcrc2ApproveError,mapTransferError,toIcrc1TransferRawRequest,toIcrc21ConsentMessageRawRequest,toIcrc2ApproveRawRequest,toTransferRawRequest});
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=index.cjs.js.map
