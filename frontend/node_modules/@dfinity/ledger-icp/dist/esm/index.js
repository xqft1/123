import{a as i}from"./chunk-ZGLF7EZO.js";import{A as N,B as V,C as j,D as u,a as m,b as d,c as l,d as x,e as h,f as I,g as A,h as T,i as g,j as c,k as v,l as k,m as y,n as E,o as R,p as b,q as w,r as C,s as F,t as S,u as q,v as B,w as $,x as _,y as D,z as L}from"./chunk-HHMJMNG7.js";import"./chunk-RICWDU7Z.js";import{a as n,b as s}from"./chunk-JESRHKXI.js";import{bigEndianCrc32 as f,isNullish as p}from"@dfinity/utils";var a=r=>{if(r.length!=64)throw new c(`Invalid account identifier ${r}. The account identifier must be 64 chars in length.`);let e=Buffer.from(r,"hex"),o=e.slice(0,4),t=Buffer.from(f(e.slice(4)));if(!t.equals(o))throw new c(`Account identifier ${r} has an invalid checksum. Are you sure the account identifier is correct?

Expected checksum: ${t.toString("hex")}
Found checksum: ${o.toString("hex")}`)},H=r=>{if(p(r))return!1;try{return a(r),!0}catch{}return!1};export{n as AccountIdentifier,F as AllowanceChangedError,A as ApproveError,R as BadFeeError,T as ConsentMessageError,D as ConsentMessageUnavailableError,S as CreatedInFutureError,C as DuplicateError,B as ExpiredError,b as GenericError,h as IcrcError,i as IndexCanister,v as InsufficientFundsError,$ as InsufficientPaymentError,c as InvalidAccountIDError,g as InvalidSenderError,u as LedgerCanister,s as SubAccount,w as TemporarilyUnavailableError,q as TooOldError,I as TransferError,y as TxCreatedInFutureError,E as TxDuplicateError,k as TxTooOldError,_ as UnsupportedCanisterCallError,a as checkAccountId,H as isIcpAccountIdentifier,N as mapIcrc1TransferError,j as mapIcrc21ConsentMessageError,V as mapIcrc2ApproveError,L as mapTransferError,d as toIcrc1TransferRawRequest,x as toIcrc21ConsentMessageRawRequest,l as toIcrc2ApproveRawRequest,m as toTransferRawRequest};
//# sourceMappingURL=index.js.map
