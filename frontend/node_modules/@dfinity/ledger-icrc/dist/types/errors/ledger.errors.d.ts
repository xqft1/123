import type { GetIndexPrincipalError, icrc21_error as Icrc21RawError } from "../../candid/icrc_ledger";
export declare class IcrcTransferError<T> extends Error {
    errorType: T;
    constructor({ msg, errorType }: {
        msg?: string;
        errorType: T;
    });
}
export declare class GenericError extends Error {
    readonly message: string;
    readonly error_code: bigint;
    constructor(message: string, error_code: bigint);
}
export declare class ConsentMessageError extends Error {
}
export declare class InsufficientPaymentError extends ConsentMessageError {
}
export declare class UnsupportedCanisterCallError extends ConsentMessageError {
}
export declare class ConsentMessageUnavailableError extends ConsentMessageError {
}
export declare const mapIcrc21ConsentMessageError: (rawError: Icrc21RawError) => ConsentMessageError;
export declare class IndexPrincipalNotSetError extends Error {
}
export declare const mapIcrc106GetIndexPrincipalError: (err: GetIndexPrincipalError) => GenericError | IndexPrincipalNotSetError;
