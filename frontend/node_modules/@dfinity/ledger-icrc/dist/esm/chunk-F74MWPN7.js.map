{
  "version": 3,
  "sources": ["../../src/canister.ts"],
  "sourcesContent": ["import { Canister, toNullable } from \"@dfinity/utils\";\nimport type { _SERVICE as IcrcIndexNgService } from \"../candid/icrc_index-ng\";\nimport type {\n  _SERVICE as IcrcLedgerService,\n  Tokens,\n} from \"../candid/icrc_ledger\";\nimport type { BalanceParams } from \"./types/ledger.params\";\n\nexport abstract class IcrcCanister<\n  T extends IcrcLedgerService | IcrcIndexNgService,\n> extends Canister<T> {\n  /**\n   * Returns the balance for a given account provided as owner and with optional subaccount.\n   *\n   * @param {BalanceParams} params The parameters to get the balance of an account.\n   * @returns {Promise<Tokens>} The balance of the given account.\n   */\n  balance = (params: BalanceParams): Promise<Tokens> =>\n    this.caller({ certified: params.certified }).icrc1_balance_of({\n      owner: params.owner,\n      subaccount: toNullable(params.subaccount),\n    });\n}\n"],
  "mappings": "AAAA,OAAS,YAAAA,EAAU,cAAAC,MAAkB,iBAQ9B,IAAeC,EAAf,cAEGF,CAAY,CAOpB,QAAWG,GACT,KAAK,OAAO,CAAE,UAAWA,EAAO,SAAU,CAAC,EAAE,iBAAiB,CAC5D,MAAOA,EAAO,MACd,WAAYF,EAAWE,EAAO,UAAU,CAC1C,CAAC,CACL",
  "names": ["Canister", "toNullable", "IcrcCanister", "params"]
}
