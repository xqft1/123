import{Canister as ke,createServices as Ae,toNullable as Pe}from"@dfinity/utils";var fe=({IDL:e})=>{let r=e.Rec(),c=e.Rec(),n=e.Rec(),l=e.Record({num_blocks_to_archive:e.Opt(e.Nat64),max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Opt(e.Nat64),more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Opt(e.Principal)}),_=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),d=e.Vec(e.Nat8),t=e.Record({owner:e.Principal,subaccount:e.Opt(d)}),y=e.Variant({SetTo:t,Unset:e.Null}),N=e.Record({icrc2:e.Bool}),h=e.Record({change_archive_options:e.Opt(l),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(e.Nat),metadata:e.Opt(e.Vec(e.Tuple(e.Text,_))),change_fee_collector:e.Opt(y),max_memo_length:e.Opt(e.Nat16),index_principal:e.Opt(e.Principal),token_name:e.Opt(e.Text),feature_flags:e.Opt(N)}),b=e.Record({decimals:e.Opt(e.Nat8),token_symbol:e.Text,transfer_fee:e.Nat,metadata:e.Vec(e.Tuple(e.Text,_)),minting_account:t,initial_balances:e.Vec(e.Tuple(t,e.Nat)),fee_collector_account:e.Opt(t),archive_options:e.Record({num_blocks_to_archive:e.Nat64,max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Nat64,more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),max_memo_length:e.Opt(e.Nat16),index_principal:e.Opt(e.Principal),token_name:e.Text,feature_flags:e.Opt(N)}),be=e.Variant({Upgrade:e.Opt(h),Init:b}),s=e.Nat,F=e.Record({block_range_end:s,canister_id:e.Principal,block_range_start:s}),p=e.Record({start:s,length:e.Nat}),k=e.Vec(e.Tuple(e.Text,n));n.fill(e.Variant({Int:e.Int,Map:k,Nat:e.Nat,Nat64:e.Nat64,Blob:e.Vec(e.Nat8),Text:e.Text,Array:e.Vec(n)}));let O=n,A=e.Record({blocks:e.Vec(O)}),P=e.Func([p],[A],[]),v=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),first_index:s,blocks:e.Vec(O),chain_length:e.Nat64,archived_blocks:e.Vec(e.Record({callback:P,start:s,length:e.Nat}))}),w=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),hash_tree:e.Vec(e.Nat8)}),m=e.Nat,x=e.Record({start:m,length:e.Nat}),a=e.Nat64,B=e.Record({from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,spender:e.Opt(t)}),C=e.Record({to:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat}),G=e.Record({fee:e.Opt(e.Nat),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,expected_allowance:e.Opt(e.Nat),expires_at:e.Opt(a),spender:t}),E=e.Record({to:t,fee:e.Opt(e.Nat),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,spender:e.Opt(t)}),R=e.Record({burn:e.Opt(B),kind:e.Text,mint:e.Opt(C),approve:e.Opt(G),timestamp:a,transfer:e.Opt(E)}),M=e.Record({transactions:e.Vec(R)}),q=e.Func([x],[M],[]),U=e.Record({first_index:m,log_length:e.Nat,transactions:e.Vec(R),archived_transactions:e.Vec(e.Record({callback:q,start:m,length:e.Nat}))}),S=e.Record({take:e.Opt(e.Nat),prev_spender:e.Opt(t),from_account:e.Opt(t)}),z=e.Record({from_account:t,to_spender:t,allowance:e.Nat,expires_at:e.Opt(e.Nat64)}),Q=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),AccessDenied:e.Record({reason:e.Text})}),J=e.Variant({Ok:e.Vec(z),Err:Q}),$=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),IndexPrincipalNotSet:e.Null}),j=e.Variant({Ok:e.Principal,Err:$}),o=e.Nat,H=e.Record({url:e.Text,name:e.Text}),K=e.Record({to:t,fee:e.Opt(o),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(d),created_at_time:e.Opt(a),amount:o}),W=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:o}),Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:o}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,InsufficientFunds:e.Record({balance:o})}),X=e.Variant({Ok:s,Err:W}),T=e.Record({utc_offset_minutes:e.Opt(e.Int16),language:e.Text}),Y=e.Record({metadata:T,device_spec:e.Opt(e.Variant({GenericDisplay:e.Null,LineDisplay:e.Record({characters_per_line:e.Nat16,lines_per_page:e.Nat16})}))}),Z=e.Record({arg:e.Vec(e.Nat8),method:e.Text,user_preferences:Y}),I=e.Variant({LineDisplayMessage:e.Record({pages:e.Vec(e.Record({lines:e.Vec(e.Text)}))}),GenericDisplayMessage:e.Text}),D=e.Record({metadata:T,consent_message:I}),u=e.Record({description:e.Text}),L=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),InsufficientPayment:u,UnsupportedCanisterCall:u,ConsentMessageUnavailable:u}),ee=e.Variant({Ok:D,Err:L}),te=e.Record({account:t,spender:t}),re=e.Record({allowance:e.Nat,expires_at:e.Opt(a)}),ce=e.Record({fee:e.Opt(e.Nat),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,expected_allowance:e.Opt(e.Nat),expires_at:e.Opt(a),spender:t}),ae=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:e.Nat}),AllowanceChanged:e.Record({current_allowance:e.Nat}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,Expired:e.Record({ledger_time:a}),InsufficientFunds:e.Record({balance:e.Nat})}),ne=e.Variant({Ok:s,Err:ae}),oe=e.Record({to:t,fee:e.Opt(o),spender_subaccount:e.Opt(d),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:o}),se=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,InsufficientAllowance:e.Record({allowance:o}),BadBurn:e.Record({min_burn_amount:o}),Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:o}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,InsufficientFunds:e.Record({balance:o})}),ie=e.Variant({Ok:s,Err:se}),le=e.Record({from:e.Opt(e.Principal)}),pe=e.Vec(e.Record({end:e.Nat,canister_id:e.Principal,start:e.Nat}));c.fill(e.Variant({Int:e.Int,Map:e.Vec(e.Tuple(e.Text,c)),Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text,Array:e.Vec(c)})),r.fill(e.Record({log_length:e.Nat,blocks:e.Vec(e.Record({id:e.Nat,block:c})),archived_blocks:e.Vec(e.Record({args:e.Vec(p),callback:e.Func([e.Vec(p)],[r],[])}))}));let _e=e.Record({certificate:e.Vec(e.Nat8),hash_tree:e.Vec(e.Nat8)});return e.Service({archives:e.Func([],[e.Vec(F)],[]),get_blocks:e.Func([p],[v],[]),get_data_certificate:e.Func([],[w],[]),get_transactions:e.Func([x],[U],[]),icrc103_get_allowances:e.Func([S],[J],[]),icrc106_get_index_principal:e.Func([],[j],[]),icrc10_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],[]),icrc1_balance_of:e.Func([t],[o],[]),icrc1_decimals:e.Func([],[e.Nat8],[]),icrc1_fee:e.Func([],[o],[]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,_))],[]),icrc1_minting_account:e.Func([],[e.Opt(t)],[]),icrc1_name:e.Func([],[e.Text],[]),icrc1_supported_standards:e.Func([],[e.Vec(H)],[]),icrc1_symbol:e.Func([],[e.Text],[]),icrc1_total_supply:e.Func([],[o],[]),icrc1_transfer:e.Func([K],[X],[]),icrc21_canister_call_consent_message:e.Func([Z],[ee],[]),icrc2_allowance:e.Func([te],[re],[]),icrc2_approve:e.Func([ce],[ne],[]),icrc2_transfer_from:e.Func([oe],[ie],[]),icrc3_get_archives:e.Func([le],[pe],[]),icrc3_get_blocks:e.Func([e.Vec(p)],[r],[]),icrc3_get_tip_certificate:e.Func([],[e.Opt(_e)],[]),icrc3_supported_block_types:e.Func([],[e.Vec(e.Record({url:e.Text,block_type:e.Text}))],[]),is_ledger_ready:e.Func([],[e.Bool],[])})};var Ne=({IDL:e})=>{let r=e.Rec(),c=e.Rec(),n=e.Rec(),l=e.Record({num_blocks_to_archive:e.Opt(e.Nat64),max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Opt(e.Nat64),more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Opt(e.Principal)}),_=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),d=e.Vec(e.Nat8),t=e.Record({owner:e.Principal,subaccount:e.Opt(d)}),y=e.Variant({SetTo:t,Unset:e.Null}),N=e.Record({icrc2:e.Bool}),h=e.Record({change_archive_options:e.Opt(l),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(e.Nat),metadata:e.Opt(e.Vec(e.Tuple(e.Text,_))),change_fee_collector:e.Opt(y),max_memo_length:e.Opt(e.Nat16),index_principal:e.Opt(e.Principal),token_name:e.Opt(e.Text),feature_flags:e.Opt(N)}),b=e.Record({decimals:e.Opt(e.Nat8),token_symbol:e.Text,transfer_fee:e.Nat,metadata:e.Vec(e.Tuple(e.Text,_)),minting_account:t,initial_balances:e.Vec(e.Tuple(t,e.Nat)),fee_collector_account:e.Opt(t),archive_options:e.Record({num_blocks_to_archive:e.Nat64,max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Nat64,more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),max_memo_length:e.Opt(e.Nat16),index_principal:e.Opt(e.Principal),token_name:e.Text,feature_flags:e.Opt(N)}),be=e.Variant({Upgrade:e.Opt(h),Init:b}),s=e.Nat,F=e.Record({block_range_end:s,canister_id:e.Principal,block_range_start:s}),p=e.Record({start:s,length:e.Nat}),k=e.Vec(e.Tuple(e.Text,n));n.fill(e.Variant({Int:e.Int,Map:k,Nat:e.Nat,Nat64:e.Nat64,Blob:e.Vec(e.Nat8),Text:e.Text,Array:e.Vec(n)}));let O=n,A=e.Record({blocks:e.Vec(O)}),P=e.Func([p],[A],["query"]),v=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),first_index:s,blocks:e.Vec(O),chain_length:e.Nat64,archived_blocks:e.Vec(e.Record({callback:P,start:s,length:e.Nat}))}),w=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),hash_tree:e.Vec(e.Nat8)}),m=e.Nat,x=e.Record({start:m,length:e.Nat}),a=e.Nat64,B=e.Record({from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,spender:e.Opt(t)}),C=e.Record({to:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat}),G=e.Record({fee:e.Opt(e.Nat),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,expected_allowance:e.Opt(e.Nat),expires_at:e.Opt(a),spender:t}),E=e.Record({to:t,fee:e.Opt(e.Nat),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,spender:e.Opt(t)}),R=e.Record({burn:e.Opt(B),kind:e.Text,mint:e.Opt(C),approve:e.Opt(G),timestamp:a,transfer:e.Opt(E)}),M=e.Record({transactions:e.Vec(R)}),q=e.Func([x],[M],["query"]),U=e.Record({first_index:m,log_length:e.Nat,transactions:e.Vec(R),archived_transactions:e.Vec(e.Record({callback:q,start:m,length:e.Nat}))}),S=e.Record({take:e.Opt(e.Nat),prev_spender:e.Opt(t),from_account:e.Opt(t)}),z=e.Record({from_account:t,to_spender:t,allowance:e.Nat,expires_at:e.Opt(e.Nat64)}),Q=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),AccessDenied:e.Record({reason:e.Text})}),J=e.Variant({Ok:e.Vec(z),Err:Q}),$=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),IndexPrincipalNotSet:e.Null}),j=e.Variant({Ok:e.Principal,Err:$}),o=e.Nat,H=e.Record({url:e.Text,name:e.Text}),K=e.Record({to:t,fee:e.Opt(o),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(d),created_at_time:e.Opt(a),amount:o}),W=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:o}),Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:o}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,InsufficientFunds:e.Record({balance:o})}),X=e.Variant({Ok:s,Err:W}),T=e.Record({utc_offset_minutes:e.Opt(e.Int16),language:e.Text}),Y=e.Record({metadata:T,device_spec:e.Opt(e.Variant({GenericDisplay:e.Null,LineDisplay:e.Record({characters_per_line:e.Nat16,lines_per_page:e.Nat16})}))}),Z=e.Record({arg:e.Vec(e.Nat8),method:e.Text,user_preferences:Y}),I=e.Variant({LineDisplayMessage:e.Record({pages:e.Vec(e.Record({lines:e.Vec(e.Text)}))}),GenericDisplayMessage:e.Text}),D=e.Record({metadata:T,consent_message:I}),u=e.Record({description:e.Text}),L=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),InsufficientPayment:u,UnsupportedCanisterCall:u,ConsentMessageUnavailable:u}),ee=e.Variant({Ok:D,Err:L}),te=e.Record({account:t,spender:t}),re=e.Record({allowance:e.Nat,expires_at:e.Opt(a)}),ce=e.Record({fee:e.Opt(e.Nat),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,expected_allowance:e.Opt(e.Nat),expires_at:e.Opt(a),spender:t}),ae=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:e.Nat}),AllowanceChanged:e.Record({current_allowance:e.Nat}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,Expired:e.Record({ledger_time:a}),InsufficientFunds:e.Record({balance:e.Nat})}),ne=e.Variant({Ok:s,Err:ae}),oe=e.Record({to:t,fee:e.Opt(o),spender_subaccount:e.Opt(d),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:o}),se=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,InsufficientAllowance:e.Record({allowance:o}),BadBurn:e.Record({min_burn_amount:o}),Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:o}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,InsufficientFunds:e.Record({balance:o})}),ie=e.Variant({Ok:s,Err:se}),le=e.Record({from:e.Opt(e.Principal)}),pe=e.Vec(e.Record({end:e.Nat,canister_id:e.Principal,start:e.Nat}));c.fill(e.Variant({Int:e.Int,Map:e.Vec(e.Tuple(e.Text,c)),Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text,Array:e.Vec(c)})),r.fill(e.Record({log_length:e.Nat,blocks:e.Vec(e.Record({id:e.Nat,block:c})),archived_blocks:e.Vec(e.Record({args:e.Vec(p),callback:e.Func([e.Vec(p)],[r],["query"])}))}));let _e=e.Record({certificate:e.Vec(e.Nat8),hash_tree:e.Vec(e.Nat8)});return e.Service({archives:e.Func([],[e.Vec(F)],["query"]),get_blocks:e.Func([p],[v],["query"]),get_data_certificate:e.Func([],[w],["query"]),get_transactions:e.Func([x],[U],["query"]),icrc103_get_allowances:e.Func([S],[J],["query"]),icrc106_get_index_principal:e.Func([],[j],["query"]),icrc10_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],["query"]),icrc1_balance_of:e.Func([t],[o],["query"]),icrc1_decimals:e.Func([],[e.Nat8],["query"]),icrc1_fee:e.Func([],[o],["query"]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,_))],["query"]),icrc1_minting_account:e.Func([],[e.Opt(t)],["query"]),icrc1_name:e.Func([],[e.Text],["query"]),icrc1_supported_standards:e.Func([],[e.Vec(H)],["query"]),icrc1_symbol:e.Func([],[e.Text],["query"]),icrc1_total_supply:e.Func([],[o],["query"]),icrc1_transfer:e.Func([K],[X],[]),icrc21_canister_call_consent_message:e.Func([Z],[ee],[]),icrc2_allowance:e.Func([te],[re],["query"]),icrc2_approve:e.Func([ce],[ne],[]),icrc2_transfer_from:e.Func([oe],[ie],[]),icrc3_get_archives:e.Func([le],[pe],["query"]),icrc3_get_blocks:e.Func([e.Vec(p)],[r],["query"]),icrc3_get_tip_certificate:e.Func([],[e.Opt(_e)],["query"]),icrc3_supported_block_types:e.Func([],[e.Vec(e.Record({url:e.Text,block_type:e.Text}))],["query"]),is_ledger_ready:e.Func([],[e.Bool],["query"])})};import{isNullish as Fe,toNullable as i}from"@dfinity/utils";var Oe=({from_subaccount:e,fee:r,created_at_time:c,memo:n,...l})=>({...l,fee:i(r),memo:i(n),from_subaccount:i(e),created_at_time:i(c)}),xe=({spender_subaccount:e,fee:r,created_at_time:c,memo:n,...l})=>({...l,fee:i(r),memo:i(n),spender_subaccount:i(e),created_at_time:i(c)}),Re=({fee:e,created_at_time:r,memo:c,from_subaccount:n,expected_allowance:l,expires_at:_,...d})=>({...d,fee:i(e),memo:i(c),from_subaccount:i(n),created_at_time:i(r),expected_allowance:i(l),expires_at:i(_)}),Te=({userPreferences:{metadata:{utcOffsetMinutes:e,language:r},deriveSpec:c},...n})=>({...n,user_preferences:{metadata:{language:r,utc_offset_minutes:i(e)},device_spec:Fe(c)?i():i("GenericDisplay"in c?{GenericDisplay:null}:{LineDisplay:{characters_per_line:c.LineDisplay.charactersPerLine,lines_per_page:c.LineDisplay.linesPerPage}})}});var g=class extends Error{errorType;constructor({msg:r,errorType:c}){super(r),this.errorType=c}},V=class extends Error{constructor(c,n){super();this.message=c;this.error_code=n}},f=class extends Error{},de=class extends f{},me=class extends f{},ue=class extends f{},Ve=e=>"GenericError"in e?new V(e.GenericError.description,e.GenericError.error_code):"InsufficientPayment"in e?new de(e.InsufficientPayment.description):"UnsupportedCanisterCall"in e?new me(e.UnsupportedCanisterCall.description):"ConsentMessageUnavailable"in e?new ue(e.ConsentMessageUnavailable.description):new f(`Unknown error type ${JSON.stringify(e)}`),ge=class extends Error{},ye=e=>"IndexPrincipalNotSet"in e?new ge("Index principal is not set for this ledger canister."):new V(e.GenericError.description,e.GenericError.error_code);var he=class e extends ke{static create(r){let{service:c,certifiedService:n,canisterId:l}=Ae({options:r,idlFactory:Ne,certifiedIdlFactory:fe});return new e(l,c,n)}metadata=r=>this.caller(r).icrc1_metadata();transactionFee=r=>this.caller(r).icrc1_fee();balance=r=>this.caller({certified:r.certified}).icrc1_balance_of({owner:r.owner,subaccount:Pe(r.subaccount)});transfer=async r=>{let c=await this.caller({certified:!0}).icrc1_transfer(Oe(r));if("Err"in c)throw new g({errorType:c.Err,msg:"Failed to transfer"});return c.Ok};totalTokensSupply=r=>this.caller(r).icrc1_total_supply();transferFrom=async r=>{let c=await this.caller({certified:!0}).icrc2_transfer_from(xe(r));if("Err"in c)throw new g({errorType:c.Err,msg:"Failed to transfer from"});return c.Ok};approve=async r=>{let c=await this.caller({certified:!0}).icrc2_approve(Re(r));if("Err"in c)throw new g({errorType:c.Err,msg:"Failed to entitle the spender to transfer the amount"});return c.Ok};allowance=r=>{let{certified:c,...n}=r;return this.caller({certified:c}).icrc2_allowance({...n})};consentMessage=async r=>{let{icrc21_canister_call_consent_message:c}=this.caller({certified:!0}),n=await c(Te(r));if("Err"in n)throw Ve(n.Err);return n.Ok};getBlocks=r=>this.caller({certified:r.certified}).icrc3_get_blocks(r.args);getIndexPrincipal=async r=>{let{icrc106_get_index_principal:c}=this.caller(r),n=await c();if("Err"in n)throw ye(n.Err);return n.Ok}};export{Oe as a,xe as b,Re as c,Te as d,g as e,V as f,f as g,de as h,me as i,ue as j,Ve as k,ge as l,ye as m,he as n};
//# sourceMappingURL=chunk-3CTNWJOV.js.map
